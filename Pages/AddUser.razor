@page "/adduser"

@inject UserServices service

<div class="container">
    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">

            <div class="p-3 mb-3 bg-primary text-white text-center">Add New User Form</div>

            <EditForm Model="@NewProduct">
                <div class="form-group">
                    <label for="name">User Name</label>
                    <input type="text" id="name" class="form-control" @bind-value="@NewProduct.Name" />
                </div>

                <div class="form-group">
                    <label for="price">User ID</label>
                    <input type="text" id="price" class="form-control" @bind="@NewProduct.UserId" />
                </div>

                <div class="form-group">
                    <label for="quantity">SSN</label>
                    <input type="text" id="quantity" class="form-control" @bind="@NewProduct.SSN" />
                </div>

                <div class="form-group">
                    <label for="Description">Hourly Pay Rate</label>
                    <input type="text" id="Description" class="form-control" @bind="@NewProduct.HourlyPay" />
                </div>

                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewProduct"> Add User</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    List<User> Products = new List<User>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }

    private async Task RefreshProducts()
    {
        Products = await service.GetUserAsync();
    }

    public User NewProduct { get; set; } = new User();
    private async Task AddNewProduct()
    {
        await service.AddUserAsync(NewProduct);
        NewProduct = new User();
        await RefreshProducts();
    }

    @* Product UpdateProduct = new Product();
    private void SetProductForUpdate(Product product)
    {
        UpdateProduct = product;
    }

    private async Task UpdateProductData()
    {
        await service.UpdateProductAsync(UpdateProduct);
        await RefreshProducts();
    }

    private async Task DeleteProduct(Product product)
    {
        await service.DeleteProductAsync(product);
        await RefreshProducts();
    }  *@
}