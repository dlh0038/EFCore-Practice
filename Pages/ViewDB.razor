@page "/viewdb"

@inject UserServices service

<div class="container">

    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>DB Id</th>
                    <th>Name</th>
                    <th>User ID</th>
                    <th>Social Security Number</th>
                    <th>Pay Rate</th>
                </tr>
            </thead>
            <tbody>
                @if (Users.Any())
                {
                    @foreach (var user in Users)
                    {
                        <tr @onclick="(() => SetProductForUpdate(user))">
                            <td>@user.Id</td>
                            <td>@user.Name</td>
                            <td>@user.UserId</td>
                            <td>@user.SSN</td>
                            <td>@user.HourlyPay</td>
                            <!--
                            <td><button class="btn btn-danger" @onclick="(() => DeleteProduct(user))">Delete</button></td>
                            -->
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No products available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>

    
</div>

@code {

    List<User> Users = new List<User>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }

    private async Task RefreshProducts()
    {
        Users = await service.GetUserAsync();
    }

    public User NewProduct { get; set; } = new User();
    private async Task AddNewUser()
    {
        await service.AddUserAsync(NewProduct);
        NewProduct = new User();
        await RefreshProducts();
    }

    User UpdateProduct = new User();
    private void SetProductForUpdate(User product)
    {
        UpdateProduct = product;
    }

    private async Task UpdateProductData()
    {
        await service.UpdateUserAsync(UpdateProduct);
        await RefreshProducts();
    }

    private async Task DeleteProduct(User product)
    {
        await service.DeleteUserAsync(product);
        await RefreshProducts();
    } 
}